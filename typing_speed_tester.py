import time

def calculate_typing_speed(start_time, end_time, typed_text):
    words_typed = len(typed_text.split())
    time_taken = end_time - start_time
    words_per_minute = (words_typed / time_taken) * 60
    return round(words_per_minute)

def calculate_typing_accuracy(original_text, typed_text):
    original_words = original_text.split()
    typed_words = typed_text.split()

    correct_words = sum(1 for ow, tw in zip(original_words, typed_words) if ow == tw)
    accuracy = (correct_words / len(original_words)) * 100
    return round(accuracy, 2)

def run_typing_speed_test(start_time, end_time, original_text, typed_text):
    speed = calculate_typing_speed(start_time, end_time, typed_text)
    accuracy = calculate_typing_accuracy(original_text, typed_text)
    return speed, accuracy



#len(typed_text.split()):typed_text.split() splits the typed_text into a list of words.len(...) calculates the number of
# words in the typed text.end_time - start_time:Calculates the time taken for typing by subtracting the start_time from
# the end_time.The result is a time duration.(words_typed / time_taken) * 60:Calculates the words per minute (WPM).
#words_typed / time_taken calculates the number of words typed per second.Multiplying by 60 converts the rate to words
# per minute.round(words_per_minute):Rounds the calculated WPM to the nearest whole number.
# zip(original_words, typed_words):zip is used to pair up corresponding elements from original_words and typed_words.
# For example, if original_words is ["The", "quick", "brown"] and typed_words is ["The", "quick", "blue"], zip would
# produce ("The", "The"), ("quick", "quick"), ("brown", "blue"). 1 for ow, tw in zip(original_words, typed_words) if ow
# == tw: This is a generator expression that yields 1 for each pair of words where the original and typed words are equal.
# sum(...):The sum function adds up all the 1s generated by the generator expression.
# This effectively counts the number of correctly typed words.
# correct_words / len(original_words):Calculates the ratio of correctly typed words to the total number of words in
# the original text. * 100:Converts the ratio to a percentage.
# round(accuracy, 2):Rounds the calculated accuracy to two decimal places.
